# @package _global_
# problem args

problem: "cvrp"
graph_size: # 200  ---> only like this works for sizes greater than 100?
coords_dist: 'explosion'
weights_dist: 'random_int'
out_name: ${problem}_200_${coords_dist}
# ${problem}_${graph_size}_${coords_dist}
data_file_path: data/test_data/${problem}/${coords_dist}/${problem}200/val_E_size2000.pkl

normalize_data: False
checkpoint_load_path: models/DPDP/DPDP/logs/${problem}_uniform100/best_val_loss_checkpoint.tar
heatmap_load_path: models/DPDP/DPDP/results/${problem}/${problem}_uniform100_val_seed4321/heatmaps/heatmaps_${problem}_uniform100.pkl
# does not work:
# checkpoint_load_path: models/DPDP/DPDP/logs/${problem}_uchoa100/best_val_loss_checkpoint.tar
# heatmap_load_path: models/DPDP/DPDP/results/${problem}/${problem}_uchoa100_val_seed4321/heatmaps/heatmaps_${problem}_uchoa100.pkl


# RP Env cfg
env_kwargs:
  generator_args:
    coords_sampling_dist: ${coords_dist}
    weights_sampling_dist: random_int # sampling integers from 1-10
    normalize_demands: False # if None or False - demands will remain un-normalized (not between 0-1)
    single_large_instance: # data/train_data/${problem}_10000/${coords_dist}/single_large_instance.pt
  sampling_args:
    sample_size: 64
    graph_size: 200 # ${graph_size}
    subsample: False
    k: 16
    cap: 50
    max_cap_factor: # factor of additional capacity w.r.t. a norm capacity of 1.0 per vehicle
    n_depots: 1 #number of depots (default = 1)

